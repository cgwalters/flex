# Makefile.in for a single TEST.
#
# By default this Makefile will build the target "$(TESTNAME)"
# from the sources "scanner.l" and "parser.y".
#
# $(TESTNAME) is supplied by the calling Makefile.
# "parser.y"  is not necessary. You may delete this file
#             if you do not require a parser.
# "scanner.l" is necessary. It should build "scanner.c".
#

@SET_MAKE@

CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@ -I. -I"@srcdir@" -I..
DEFS = @DEFS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
SHELL = /bin/sh
srcdir = @srcdir@
VPATH = @srcdir@
LN_S = @LN_S@
YACC = @YACC@
CC = @CC@
AR = ar
RANLIB = @RANLIB@
YACC = @YACC@

# Edit these if necessary for your specific test.
FLEX = ../../flex
YFLAGS = --defines --output-file="parser.c" --name-prefix="test" 
OBJS = scanner.o # parser.o

# Force YACC to be bison (autoconf generates 'bison -y')
YACC = @BISON@

TESTNAME = test-prefix-r

all: $(TESTNAME)

$(TESTNAME): $(OBJS)
	$(CC) $(CFLAGS) -o $(TESTNAME) $(OBJS) $(LDFLAGS) $(LIBS)

scanner.c: $(srcdir)/scanner.l
	$(FLEX) $(srcdir)/scanner.l

scanner.o: scanner.c 
	$(CC) $(CPPFLAGS) $(CFLAGS) -c scanner.c

parser.c: $(srcdir)/parser.y
	$(YACC) $(YFLAGS) $(srcdir)/parser.y

parser.o: parser.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c parser.c

test: check

check: $(TESTNAME)
	./$(TESTNAME) < $(srcdir)/test.input 

distclean: clean
	rm -f Makefile

clean:
	rm -f scanner.o scanner.c parser.o parser.c parser.h  parser.h $(TESTNAME)

