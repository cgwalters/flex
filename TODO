* resolve the items in the to.do directory

** expand the above into individual requests and handle those requests

* the manual:

** clean up the faqs section. The information is good; the texinfo
   could use some touching up.

** index the faq entries

** create a section on flex design, features, etc.

* address lex-replacement: document or provide an option through
   configure for creating lex and libl.a files (but remember this has
   posix implications)

* getext

** make sure all flex modules use gettext translation facilities

*subdirectories

** in examples/manual, integrate the Makefile.examples into the
    Makefile.am

* test suite

** make test suite more complete

* generic coding

** move as much skeleton code as possible out of gen.c and into
  flex.skl

*  * Automatic management of the input buffer stack. (currently does
    this for the start condition stack, but not for the input
    buffer stack.)

** memory management

**  * Complete the memory management api and documentation.

*** create a uniform memory management API

** figure out whether we want to add the capability to have
  auto-generated backout rules

** yylineno is global, not per-buffer

* C++

** revisit the C++ API. We get requests to make it more complete.

* Tables API

** Fix deserialization of --fast tables

** Handle reject-triggered tables

** Lookup table by name

** rename _fwrite t _write since writer was created

** create user API for tables deserialization

** document API and --tables-* options

** create test for multiple tables

** verify that new macros/functions work with %option header-file

* build system

** use bootstrapper

Legend:

*, **, ***: outline depth
%% at end of item: must be adressed before next major release

Local Variables:
Mode: text
mode: outline-minor
End:
